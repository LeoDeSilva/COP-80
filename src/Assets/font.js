// STORE IN RAM AS DECIMAL (DECODE TO BINARY STRING)
const FONT = {
  0: "111101101101111",
  1: "110010010010111",
  2: "111001111100111",
  3: "111001011001111",
  4: "101101111001001",
  5: "111100111001111",
  6: "111100111101111",
  7: "111001001001001",
  8: "111101111101111",
  9: "111101111001001",

  a: "111101111101101",
  b: "111101110101111",
  c: "011100100100011",
  d: "110101101101111",
  e: "111100110100111",
  f: "111100110100100",
  g: "011100100101111",
  h: "101101111101101",
  i: "111010010010111",
  j: "111010010010110",
  k: "101101110101101",
  l: "100100100100111",
  m: "111111101101101",
  n: "110101101101101",
  o: "011101101101110",
  p: "111101111100100",
  q: "010101101110011",
  r: "111101110101101",
  s: "011100111001110",
  t: "111010010010010",
  u: "101101101101011",
  v: "101101101101010",
  w: "101101101111111",
  x: "101101010101101",
  y: "101101111001111",
  z: "111001010100111",

  "!": "010010010000010",
  ".": "000000000000010",
  ",": "000000000010100",
  '"': "101101000000000",
  "'": "010100000000000",
  "`": "010100000000000",
  $: "111110011111010",
  "@": "010101101100011",
  "&": "110110011101111",
  "|": "010010010010010",
  "\\": "100010010010001",
  "?": "111001011000010",
  "*": "101010111010101",
  "+": "000010111010000",
  "-": "000000111000000",
  _: "000000000000111",
  "/": "001010010010100",
  ":": "000010000010000",
  ";": "000010000010100",
  "%": "101001010100101",
  "^": "010101000000000",

  "=": "000111000111000",
  "<": "001010100010001",
  ">": "100010001010100",
  "#": "101111101111101",

  "(": "010100100100010",
  ")": "010001001001010",
  "[": "110100100100110",
  "]": "011001001001011",
  "{": "011010110010011",
  "}": "110010011010110",
  " ": "000000000000000",
  err: "111111111111111",
};

module.exports = {
  FONT,
};
